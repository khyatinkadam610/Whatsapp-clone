{"ast":null,"code":"var _jsxFileName = \"F:\\\\IMPS\\\\react\\\\whatsapp-clone\\\\src\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, IconButton } from '@material-ui/core';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport './Chat.css';\nimport { useParams } from 'react-router-dom';\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\nimport MicIcon from '@material-ui/icons/Mic';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [input, setInput] = useState(\"\");\n  const [seed, setSeed] = useState(\"\");\n  const {\n    roomId\n  } = useParams(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState(\"\");\n  const [{\n    user\n  }, dispatch] = useStateValue();\n  useEffect(() => {\n    setSeed(Math.random() * 5000);\n  }, []);\n  useEffect(() => {\n    if (roomId) {\n      // console.log(roomId)\n      db.collection(\"rooms\").doc(roomId).onSnapshot(snapshot => {\n        setRoomName(snapshot.data().name);\n      });\n      db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\n        setMessages(snapshot.docs.map(doc => doc.data()));\n      });\n      console.log(messages);\n    } // else{\n    //     console.log(\"no rrom\")\n    //     // db.collection(\"rooms\").doc(\"abc\").onSnapshot((snapshot) => {\n    //     //     setRoomName(snapshot.data().name);\n    //     // });\n    // }\n\n  }, [roomId]);\n\n  const sendMessage = e => {\n    e.preventDefault();\n    console.log(\"Dattebayo...naruto kun....\", input);\n\n    const sendMessage = e => {\n      e.preventDefault();\n      db.collection('rooms').doc(roomId).collection('messages').add({\n        message: input,\n        name: user.displayName,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n      setInput(\"\");\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        scr: `https://avatars.dicebear.com/api/human/${seed}.svg`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Last Seen ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__headerRight\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(AttachFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(MoreVert, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__body\",\n      children: messages.map(message => {\n        var _message$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat__message 'chat__receiver'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__name\",\n            children: message.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), message.message, /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"chat__timestamp\",\n            children: new Date((_message$timestamp = message.timestamp) === null || _message$timestamp === void 0 ? void 0 : _message$timestamp.toDate()).toUTCString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat__footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          type: \"text\",\n          placeholder: \"Type a message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: sendMessage,\n          children: \" Send a Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"pMVw8RAUCUUlKN6zXkyTI5Ja20c=\", true, function () {\n  return [useParams];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["F:/IMPS/react/whatsapp-clone/src/Chat.js"],"names":["Avatar","IconButton","React","useEffect","useState","useParams","AttachFile","MoreVert","SearchOutlined","MicIcon","InsertEmoticonIcon","db","firebase","Chat","input","setInput","seed","setSeed","roomId","roomName","setRoomName","messages","setMessages","user","dispatch","useStateValue","Math","random","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","console","log","sendMessage","e","preventDefault","add","message","displayName","timestamp","firestore","FieldValue","serverTimestamp","Date","toDate","toUTCString","target","value"],"mappings":"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","sourcesContent":["import { Avatar, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useEffect, useState } from 'react'\r\nimport './Chat.css'\r\nimport { useParams } from 'react-router-dom';\r\nimport { AttachFile, MoreVert, SearchOutlined } from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nfunction Chat() {\r\n    const [input, setInput] = useState(\"\");\r\n    const [seed, setSeed] = useState(\"\");\r\n    const { roomId } = useParams(\"\");\r\n    const [roomName, setRoomName] = useState(\"\");\r\n    const [messages, setMessages] = useState(\"\")\r\n    const [{user}, dispatch] = useStateValue();\r\n    useEffect(() => {\r\n        setSeed(Math.random() * 5000);\r\n    }, [])\r\n    useEffect(() => {\r\n\r\n        if (roomId) {\r\n            // console.log(roomId)\r\n            db.collection(\"rooms\").doc(roomId).onSnapshot((snapshot) => {\r\n                setRoomName(snapshot.data().name);\r\n            });\r\n \r\n            db.collection('rooms').doc(roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map(doc => doc.data()))\r\n              \r\n            });\r\n            console.log(messages)\r\n        }\r\n        // else{\r\n        //     console.log(\"no rrom\")\r\n        //     // db.collection(\"rooms\").doc(\"abc\").onSnapshot((snapshot) => {\r\n        //     //     setRoomName(snapshot.data().name);\r\n        //     // });\r\n\r\n        // }\r\n    }, [roomId]);\r\n    const sendMessage = (e) => {\r\n        e.preventDefault();\r\n        console.log(\"Dattebayo...naruto kun....\", input);\r\n        const sendMessage = (e) => {\r\n            e.preventDefault();\r\n            db.collection('rooms').doc(roomId).collection('messages').add({\r\n                message: input,\r\n                name: user.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            });\r\n        setInput(\"\");\r\n    };\r\n}\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <div className=\"chat__header\">\r\n                <Avatar scr={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n                <div className=\"chat__headerInfo\">\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last Seen ...</p>\r\n                </div>\r\n                <div className=\"chat__headerRight\">\r\n                    <IconButton>\r\n                        <SearchOutlined />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile />\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert />\r\n                    </IconButton>\r\n                </div>\r\n            </div>\r\n            <div className='chat__body'>\r\n                {messages.map(message => (\r\n                    <p className={`chat__message 'chat__receiver'}`}>\r\n                        <span className=\"chat__name\">{message.name}</span>\r\n                        {message.message}\r\n                        <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n                    </p>\r\n                ))}\r\n            </div>\r\n            <div className=\"chat__footer\">\r\n                <InsertEmoticonIcon />\r\n                <form>\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)} type=\"text\" placeholder=\"Type a message\" />\r\n                    <button type=\"submit\" onClick={sendMessage}> Send a Message</button>\r\n                </form>\r\n                <MicIcon />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n"]},"metadata":{},"sourceType":"module"}